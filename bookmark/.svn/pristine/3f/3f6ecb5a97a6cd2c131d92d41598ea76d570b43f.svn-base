///<reference path="scripts/jquery/jquery.d.ts" />
///<reference path="scripts/bookmark_right_click_menu.ts" />
///<reference path="scripts/bookmark_container.ts" />
///<reference path="scripts/bookmark_page_list.ts" />

namespace BookMark {
    class Main {
        private bookMarkNavManager: BookMarkManager;
        private bookMarkNavRightMenu: BookMarkRightClickMenu;

        private bookMarkPageList: BookMarkPageList;
        private pageListRightClickMenu: PageListRightClickMenu;


        constructor() {
            this.bookMarkNavManager = new BookMarkManager();
            this.bookMarkNavRightMenu = new BookMarkRightClickMenu();
            this.bookMarkPageList = new BookMarkPageList();
            this.pageListRightClickMenu = new PageListRightClickMenu();

            this.initNavMenu();
            this.initPageList();

            this.initForManagerWindow();
            this.initPageSet();
        }

        private initPageSet() {
            let navEl = $(".nav");
            let wndHeight = $(window).height();
            let top = navEl.offset().top;
            let height = wndHeight - top;
            navEl.height(height);
        }

        private initForManagerWindow() {
            $("#manager").bind("click", function () {
                var wnd = window.open("", "_blank","height=800, width=1000, top=200,left=200, toolbar =no, menubar=no, scrollbars=no, resizable=no, location=no, status=no");
                wnd.document.write(`<!DOCTYPE html>
                                        <html>
                                        <head>
                                            <link href="app.css" rel="stylesheet" type="text/css" />
                                        </head>
                                        <body>
                                            <div class="nav">
                                                <ul id="bookmark_nav"></ul>
                                            </div>
                                            <div class="page_list" id="page_list">  
                                            </div>
                                            <script type="text/javascript" src="scripts/jquery-1.9.1.min.js"></script>
                                            <script type="text/javascript" src="scripts/bookmark_right_click_menu.js"></script>
                                            <script type="text/javascript" src="scripts/bookmark_container.js"></script>
                                            <script type="text/javascript" src="scripts/bookmark_page_list.js"></script>
                                            <script type="text/javascript" src="app.js"></script>
                                        </body>
                                        </html>`);
            });
        }

        private initNavMenu() {
            this.bookMarkNavRightMenu.onAddDir = () => {
                let node = this.bookMarkNavRightMenu.getTargetNode();
                this.bookMarkNavManager.newItem(node.getSource().id);
            }
            this.bookMarkNavRightMenu.onAddPage = () => {
                this.bookMarkPageList.newItem();
            }
            this.bookMarkNavRightMenu.onDel = () => {
                let node = this.bookMarkNavRightMenu.getTargetNode();
                this.bookMarkNavManager.removeItem(node.getSource().id);
            }
            this.bookMarkNavRightMenu.onRename = () => {
                let node = this.bookMarkNavRightMenu.getTargetNode();
                node.getSource().state = BookMarkDataItemState.Rename;
                this.bookMarkNavManager.reRender();
            }
            this.bookMarkNavRightMenu.render();


            this.bookMarkNavManager = new BookMarkManager();
            this.bookMarkNavManager.onRightClick = (node: BookMarkNode, e: JQueryEventObject) => {
                let offset = node.getNodeElement().offset();
                this.bookMarkNavRightMenu.show(e.pageX + 2, e.pageY + 2);
                this.bookMarkNavRightMenu.setTargetNode(node);

                this.pageListRightClickMenu.hide();
            }
            this.bookMarkNavManager.onRename = (node: BookMarkNode) => {
                console.log(node.getSource());
            }
            this.bookMarkNavManager.onMove = () => {
                console.log(this.bookMarkNavManager.getDataSource());
            }
            this.bookMarkNavManager.addBookMarkData({ id: 0, pid: -1, title: "" });

            this.bookMarkNavManager.addBookMarkData({ id: 1, pid: 0, title: `目录1` });
            this.bookMarkNavManager.addBookMarkData({ id: 2, pid: 0, title: `目录2` });
            this.bookMarkNavManager.addBookMarkData({ id: 3, pid: 0, title: `目录3` });

            this.bookMarkNavManager.addBookMarkData({ id: 11, pid: 1, title: `目录11` });
            this.bookMarkNavManager.addBookMarkData({ id: 12, pid: 1, title: `目录12` });

            this.bookMarkNavManager.addBookMarkData({ id: 21, pid: 2, title: `目录21` });
            this.bookMarkNavManager.addBookMarkData({ id: 22, pid: 2, title: `目录22` });

            this.bookMarkNavManager.addBookMarkData({ id: 211, pid: 21, title: `目录211` });
            this.bookMarkNavManager.addBookMarkData({ id: 212, pid: 21, title: `目录212` });

            this.bookMarkNavManager.onNodeClick = (arg: BookMarkNode) => {
                this.bookMarkPageList.empty();
                this.bookMarkPageList.add({ id: 1, title: `新浪网`, url: "http://www.sina.com/" });
                this.bookMarkPageList.reRender();
            };
            this.bookMarkNavManager.render("bookmark_nav");
        }

        private initPageList() {
            let selectedBookMarkPageDataItem: BookMarkPageDataItem;

            this.bookMarkPageList.add({ id: 1, title: `新浪网`, url: "http://www.sina.com/" });
            this.bookMarkPageList.add({ id: 5, title: `新浪网1`, url: "http://www.sina.com/" });
            this.bookMarkPageList.add({ id: 3, title: `新浪网2`, url: "http://www.sina.com/" });
            this.bookMarkPageList.add({ id: 4, title: `新浪网3`, url: "http://www.sina.com/" });
            this.bookMarkPageList.render("page_list");
            this.bookMarkPageList.onItemAdd = (data: BookMarkPageDataItem) => {
                console.log(data);
            }
            this.bookMarkPageList.onItemEdit = (data: BookMarkPageDataItem) => {
                console.log(data);
            }
            this.bookMarkPageList.onItemDel = (data: BookMarkPageDataItem) => {
                console.log(data);
            }
            this.bookMarkPageList.onRightClick = (e: JQueryEventObject, dataItem: BookMarkPageDataItem) => {
                selectedBookMarkPageDataItem = dataItem;
                this.pageListRightClickMenu.show(e.pageX, e.pageY);
                 
                this.bookMarkNavRightMenu.hide();
            }


            this.pageListRightClickMenu.render();
            this.pageListRightClickMenu.onDel = () => {
                this.bookMarkPageList.removeItem(selectedBookMarkPageDataItem.id);
            }
            this.pageListRightClickMenu.onEdit = () => {
                this.bookMarkPageList.editItem(selectedBookMarkPageDataItem.id);
            }
            this.pageListRightClickMenu.onOpen = () => {
                window.open(selectedBookMarkPageDataItem.url);
            }
        }
    }
    new Main();
}
