//递归
var getMax = function (list) {
    if (list.length == 0) {
        return null;
    }
    var curr = list.pop();
    var next = getMax(list);
    return curr > next ? curr : next;
};
var getMax1 = function (list) {
    var max = 0;
    for (var i = 0; i < list.length; i++) {
        var item = list[i];
        if (item > max) {
            max = item;
        }
    }
    return max;
};
var take = function (list, count) {
    if (count == 0 || list.length == 0) {
        return [];
    }
    var ele = list.shift();
    return [ele].concat(take(list, count - 1));
};
var take1 = function (list, count) {
    var result = [];
    for (var i = 0; i < count; i++) {
        result.push(list[i]);
    }
    return result;
};
var replicate = function (ele, count) {
    if (count == 0) {
        return "";
    }
    return ele + replicate(ele, count - 1);
};
var reverse = function (list) {
    if (list.length == 0) {
        return [];
    }
    return [list.pop()].concat(reverse(list));
};
var exists = function (list, ele) {
    if (list.length == 0) {
        return false;
    }
    if (list.pop() == ele) {
        return true;
    }
    return exists(list, ele);
};
var quickSort = function (list) {
    if (list.length == 0) {
        return [];
    }
    var middle = list.pop();
    var left = list.filter(function (n) { return n <= middle; });
    var right = list.filter(function (n) { return n > middle; });
    return quickSort(left).concat([middle]).concat(quickSort(right));
};
//# sourceMappingURL=app.js.map